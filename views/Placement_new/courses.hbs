<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Our Placements</title>
  <link rel="icon" type="image/x-icon" href="/img/favicon-16x16.png" />
  <link href="https://fonts.googleapis.com/css?family=Poppins" rel="stylesheet" />
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />

  <style>
    * {
/* Example styling for the header */
header {
    position: fixed; /* Fix the header to the top */
    top: 0;
    left: 0;
    width: 100%;
    background-color: #fff; /* Background color for the header */
    z-index: 1000; /* Higher z-index to ensure it stays on top */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Optional: Add shadow for better visibility */
}
      box-sizing: border-box;
      padding: 0;
      margin: 0;
    }

    body {
      font-family: "Poppins";
    }



    #header {
      position: sticky;
      top: 0;
    }

    #btn-back-to-top {
      position: fixed;
      display: none;
    }

    .courses {
      background: linear-gradient(90.09deg, rgba(0, 0, 0, 0.7) 0.08%, rgba(70, 70, 70, 0.70) 99.11%),url(../img/bg_people.JPG);
      background-repeat: no-repeat;
      background-position: center;
      background-size: cover;
    }
     .tpopeople {
      background: linear-gradient(90.09deg, rgba(0, 0, 0, 0.7) 0.08%, rgba(70, 70, 70, 0.70) 99.11%), url(../img/bg_people.JPG);
      background-repeat: no-repeat;
      background-position: center;
      background-size: cover;
    }

    .table-container {
      margin: 2rem 0;
      padding: 0 1rem;
    }

    table {
      width: 100%;
      border-collapse: collapse;
    }

    th, td {
      padding: 0.75rem;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }

    th {
      background-color: #f4f4f4;
      font-weight: bold;
    }

    .view-button {
      color: #007bff;
      text-decoration: underline;
      cursor: pointer;
    }

    .view-button:hover {
      color: #0056b3;
    }
    


.popup-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.popup-content {
  background: white;
  padding: 20px;
  border-radius: 8px;
  position: relative;
}

.popup-image {
  max-width: 100%;
  max-height: 50vh;
}

.popup-close {
  position: absolute;
  top: 10px;
  right: 10px;
  background: #f44336;
  color: white;
  border: none;
  padding: 5px;
  border-radius: 5px;
  cursor: pointer;
}


.container {
   width: 100%;
    text-align: center;
     margin-top: 75px;
    margin-bottom: 65px;
}

.programs {
  width: 100vw;
    display: flex;
    justify-content: center;
    gap: 20px; /* Spacing between buttons */
}

.program-item {
    width:22%;
    text-align: center;
    position: relative; /* To position branches and years */
}

.program-btn:hover {
    background-color: #0056b3;
}

.branches-list {
    display: none;
    margin-top: 10px;
    text-align: left;
    margin-left: 0;
    margin-right:0;
    position: absolute;
    z-index: 100;
    background-color: #fff;
    border: 1px solid #ddd;
      border-radius: 0.5rem;
      width: max-content;
      padding-bottom: 5px;
}

.years-list {
    display: none;
    margin-top: 10px;
    text-align: left;
    margin-left: 20px; /* Spacing between branches and years */
    width: fit-content;
    position: absolute;
    left: 97%; /* Place years-list to the right of branches-list */
    top: 0; /* Align with the top of the branches-list */
     background-color: #fff;
    border: 1px solid #ddd;
      border-radius: 0.5rem;
      width: max-content;
      padding-bottom: 5px;
}

.branches-list ul, .years-list ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.branches-list li, .years-list li {
      display: block;
      padding: 0.5rem 1rem;
      color: #333;
      text-decoration: none;
      cursor: pointer;
    } 

   .branches-list li:hover, .years-list li:hover {
      background-color: #f0f0f0;
    }

    @media (max-width: 810px) {
      .programs{
        flex-direction:column;
        align-items: center;
      }
      .program-item{
        width: 85%;
      }
    }
    @media (max-width: 528px) {
     .branches-list li, .years-list li {
      font-size: 0.875rem;
    } 
    }
     @media (max-width: 470px) {
     .branches-list li, .years-list li {
      font-size: 0.775rem;
    } 
    }
    @media (max-width: 425px) {
     .branches-list li, .years-list li {
      font-size: 0.675rem;
    } 
    }
     @media (max-width: 382px) {
     .branches-list li, .years-list li {
      font-size: 0.515rem;
    } 
    }
     @media (max-width: 315px) {
     .branches-list li, .years-list li {
      font-size: 0.485rem;
    } 
    }
    
.prgram-btn{
width: 200px;
}
/* Basic styles for the dropdown */
        .branches-list, .years-list {
            display: none;
            margin: 0;
            padding: 0;
            list-style: none;
        }

        .branches-list ul, .years-list ul {
            padding: 0;
            margin: 0;
        }

        .branches-list li, .years-list li {
            padding: 8px;
            cursor: pointer;
        }

        .branches-list li:hover, .years-list li:hover {
            background-color: #f1f1f1;
        }

        .dropdown-open {
            display: block;
        }
        .heading{
          text-align: center;
          padding: 1rem;
        }
        .arrow {
    display: none; /* Hide arrows by default */
    margin-left: 5px; /* Space between text and arrow */
    font-size: 16px; /* Adjust size as needed */
    transition: transform 0.3s ease; /* Smooth rotation transition */
}

.branch-active .arrow {
    display: inline-block; /* Show arrow for active branch */
    transform: rotate(90deg); /* Rotate arrow to point right when active */
}

.years-list {
    display: none; /* Hide years list by default */
}

.years-list.active {
    display: block; /* Show years list when active */
}
/* Styling for red background when BTech branches are displayed */
.branches-list {
    border: 3px solid #1E3A8A; /* Same color as the heading (you can adjust the color code) */
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}
.branches-list .heading {
    background-color: #1E3A8A; /* Keep the same color for the heading */
    padding: 10px;
    color: white;
}
/* Limit the height of the branches list and add a scrollbar */
.branches-list ul {
    max-height: 300px; /* Adjust this value based on how much space you want */
    overflow-y: auto;  /* Allow vertical scrolling */
}

/* Optional: Customize the scrollbar (for WebKit-based browsers) */
.branches-list ul::-webkit-scrollbar {
    display: none;
}

.branches-list ul::-webkit-scrollbar-thumb {
    background-color: #1E3A8A; /* Customize scrollbar thumb color */
    border-radius: 10px;
}

.branch-arrow {
            display: inline-block;
            width: 10px;
            height: 10px;
            border: solid black;
            border-width: 0 2px 2px 0;
            transform: rotate(45deg);
            margin-right: 10px;
            transition: transform 0.3s ease;
        }
        .branch-item.active .branch-arrow {
            transform: rotate(-135deg); /* Rotate to point down */
        }
        .years-list {
            display: none;
            margin-top: 10px;
        }
        .years-list.active {
            display: block;
        }

.branch-arrow-mtech{
     display: inline-block;
            width: 10px;
            height: 10px;
            border: solid black;
            border-width: 0 2px 2px 0;
            transform: rotate(45deg);
            margin-right: 10px;
            transition: transform 0.3s ease;
}
.branch-item.active .branch-arrow-mtech {
            transform: rotate(-135deg); /* Rotate to point down */
        }
.program-item {
    position: relative; /* Positioning for proper alignment of children */
    margin-bottom: 1rem;
}

.program-btn {
    display: block;
    width: 100%;
    text-align: left;
    background: #fff;
    border: 1px solid #ddd;
    border-radius: 8px;
}
.branch-item {
    cursor: pointer;
    padding: 0.5rem 1rem;
    border-bottom: 1px solid #ddd; /* Separator between items */
}

.branch-item:last-child {
    border-bottom: none; /* Remove the separator for the last item */
}

.branch-item.active {
    background-color: #e0f7fa; /* Highlight selected branch */
}


.years-list ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.years-list li {
    cursor: pointer;
    padding: 0.5rem 1rem;
    border-bottom: 1px solid #ddd; /* Separator between items */
}

.years-list li:last-child {
    border-bottom: none; /* Remove the separator for the last item */
}
.program-btn {
    border-radius: 12px; /* Full border-radius */
    border-bottom-left-radius: 0 !important; /* Remove bottom-left border-radius */
    border-bottom-right-radius: 0 !important; /* Remove bottom-right border-radius */
}


/* Styling for the branches list */
.branches-list {
    display: none; /* Initially hidden */
    position: relative; /* Relative positioning to keep it within the bounds of the program-item */
    width: 100%;
    background: #fff; /* Background color for the dropdown */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    border-radius: 8px; /* Rounded corners */
    padding: 1rem;
    border: 1px solid #ddd; /* Border for the dropdown */
    border-top-left-radius: 0; /* Remove top-left border-radius */
    border-top-right-radius: 0; /* Remove top-right border-radius */
    border-bottom-left-radius: 12px; /* Round bottom-left corner */
    border-bottom-right-radius: 12px; /* Round bottom-right corner */
    border-right: 1px solid #ddd; /* Optional: Add right border to separate from years section */
    padding: 15px; /* Add padding if needed */
    flex: 1; /* Flex to occupy remaining space */
}

/* Styling for the years list */
.years-list {
    border-top-left-radius: 0; /* Remove top-left border-radius */
    border-top-right-radius: 0; /* Remove top-right border-radius */
    border-bottom-left-radius: 12px; /* Round bottom-left corner */
    border-bottom-right-radius: 12px; /* Round bottom-right corner */
    padding: 15px; /* Add padding if needed */
    flex: 1; /* Flex to occupy remaining space */
    background-color: white; /* Optional: Set background color */
    margin-top: 0rem;
}

/* Styling for the branches list */
.branches-list {
    flex: 1; /* Flex to occupy remaining space */
    border: 1px solid #ddd; /* Border to separate from years section */
    padding: 15px; /* Add padding if needed */
    background-color: #fff; /* Set background color */
    position: relative; /* Ensure this is above the footer */
    z-index: 1; /* Lower z-index to ensure it appears below the header */
}

/* Styling for the years list */
.years-list {
    position: absolute; /* Position absolutely relative to parent */
    left: 100%; /* Place it to the right of the branches list */
    top: 0; /* Align to the top of the branches list */
    z-index: 10; /* Ensure it's above other content */
    display: none; /* Hide by default, show with JavaScript */
    background-color: #fff; /* Set background color to match */
    border: 1px solid #ddd; /* Add border for visibility */
    padding: 15px; /* Add padding if needed */
}

/* Footer styling */
footer {
    position: fixed; /* Fix the footer at the bottom of the page */
    bottom: 0;
    width: 100%;
    background-color: #f1f1f1; /* Example background color */
    text-align: center;
    padding: 10px;
    z-index: 1; /* Ensure it's below the header and dropdown */
}
@media (max-width:823px) {
  .programs{
        width:90vw;
  }
}
@media (max-width:614px) {
  .programs{
        width:75vw;
  }
 
      .branches-list li, .years-list li {
        font-size: 1rem;
    }
}

  </style>
  
</head>

<body>
  <div>
    {{>header}}
  </div>
  <br><br><br><br><br><br>

  <!-- Back to top button -->
  <button type="button" data-mdb-ripple="true" data-mdb-ripple-color="light"
    class="inline-block p-3 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded-full shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-red-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out bottom-5 right-5"
    id="btn-back-to-top">
    <svg aria-hidden="true" focusable="false" data-prefix="fas" class="w-4 h-4" role="img"
      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
      <path fill="currentColor"
        d="M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z">
      </path>
    </svg>
  </button>

  <!-- Background pic and heading -->
  <div>
    <div class="courses flex flex-col justify-center items-start h-[224px] px-4 lg:px-[11%] py-[48px]">
      <p class="font2 font-bold text-[52px] lg:text-[68px] uppercase text-white leading-[1]">Placements</p>
    </div>
    <nav class="flex px-4 lg:px-[11%] bg-gray-200 py-[8px] text-black" aria-label="Breadcrumb">
      <ol class="inline-flex items-center">
        <li class="inline-flex items-center">
          <a href="" class="inline-flex items-center text-sm font-medium hover:text-gray-900">
          </a><a href="{{URL}}" class="text-lg font-medium ml-2"><i class="fa fa-home"></i> CTP</a>
        </li>
        <li aria-current="page">
          <div class="inline-flex items-center">
            <i style="color: rgb(128, 128, 128); font-size: 12px; margin-left: 12px"
              class="fa-solid fa-angle-right ml-2"></i>
            <a href="{{URL}}/courses" class="text-lg font-medium ml-2">Placements</a>
          </div>
        </li>
      </ol>
    </nav>
  </div>








<div class="container">
 <div class="programs">
    <!-- BTech Section -->
    <div class="program-item">
        <button class="program-btn transition delay-100 duration-300 hover:cursor-pointer hover:shadow-xl hover:bg-sky-400 hover:shadow-sky-500 hover:scale-110 w-full px-3 py-5 bg-white shadow shadow-gray-400 rounded-xl" onclick="toggleBranches('btech')">BTech</button>
        <div id="btech-branches" class="branches-list">
            <h2 class="heading">BTech Branches</h2>
            <ul id="btech-branches-list">
                <li class="branch-item" onclick="toggleYears('btech', 'Bio Technology')" id="Bio Technology">
                    <span class="branch-arrow"></span>Bio Technology
                </li>
                <li class="branch-item" onclick="toggleYears('btech', 'Chemical Engineering')" id="Chemical Engineering">
                    <span class="branch-arrow"></span>Chemical Engineering
                </li>
                <li class="branch-item" onclick="toggleYears('btech', 'Civil Engineering')" id="Civil Engineering">
                    <span class="branch-arrow"></span>Civil Engineering
                </li>
                <li class="branch-item" onclick="toggleYears('btech', 'Computer Science and Engineering')" id="Computer Science and Engineering">
                    <span class="branch-arrow"></span>Computer Science and Engineering
                </li>
                <li class="branch-item" onclick="toggleYears('btech', 'Data Science and Engineering')" id="Data Science and Engineering">
                    <span class="branch-arrow"></span>Data Science and Engineering
                </li>
                <li class="branch-item" onclick="toggleYears('btech', 'Electrical Engineering')" id="Electrical Engineering">
                    <span class="branch-arrow"></span>Electrical Engineering
                </li>
                <li class="branch-item" onclick="toggleYears('btech', 'Electronics and Communication Engineering')" id="Electronics and Communication Engineering">
                    <span class="branch-arrow"></span>Electronics and Communication Engineering
                </li>
                <li class="branch-item" onclick="toggleYears('btech', 'Electronics and VLSI Engineering')" id="Electronics and VLSI Engineering">
                    <span class="branch-arrow"></span>Electronics and VLSI Engineering
                </li>
                <li class="branch-item" onclick="toggleYears('btech', 'Industrial and Production Engineering')" id="Industrial and Production Engineering">
                    <span class="branch-arrow"></span>Industrial and Production Engineering
                </li>
                <li class="branch-item" onclick="toggleYears('btech', 'Information Technology')" id="Information Technology">
                    <span class="branch-arrow"></span>Information Technology
                </li>
                <li class="branch-item" onclick="toggleYears('btech', 'Instrumental and Control Engineering')" id="Instrumental and Control Engineering">
                    <span class="branch-arrow"></span>Instrumental and Control Engineering
                </li>
                <li class="branch-item" onclick="toggleYears('btech', 'Mathematics and Computing')" id="Mathematics and Computing">
                    <span class="branch-arrow"></span>Mathematics and Computing
                </li>
                
                <li class="branch-item" onclick="toggleYears('btech', 'Textile Technology')" id="Textile Technology">
                    <span class="branch-arrow"></span>Textile Technology
                </li>

                
            </ul>
            <div id="btech-years" class="years-list">
                <h2 class="heading">Years</h2>
                <ul>
                    <li onclick="handleYears('Bachelor of Technology (B.Tech)', '2022')">2022</li>
                    <li onclick="handleYears('Bachelor of Technology (B.Tech)', '2023')">2023</li>
                    <li onclick="handleYears('Bachelor of Technology (B.Tech)', '2024')">2024</li>
                    <li onclick="handleYears('Bachelor of Technology (B.Tech)', '2025')">2025</li>
                    <li onclick="handleYears('Bachelor of Technology (B.Tech)', '2026')">2026</li>
                </ul>
            </div>
        </div>
    </div>

    <!-- MTech Section -->
    <div class="program-item">
        <button class="program-btn transition delay-100 duration-300 hover:cursor-pointer hover:shadow-xl hover:bg-sky-400 hover:shadow-sky-500 hover:scale-110 w-full px-3 py-5 bg-white shadow shadow-gray-400 rounded-xl" onclick="toggleBranches('mtech')">MTech</button>
        <div id="mtech-branches" class="branches-list">
            <h2 class="heading">MTech Branches</h2>
            <ul>
                <li class="branch-item" onclick="toggleYears('mtech', 'Artificial Intelligence')" id="Artificial Intelligence">
    <span class="branch-arrow"></span>Artificial Intelligence
       </li>
         <li class="branch-item" onclick="toggleYears('mtech', 'Biotechnology')" id="Biotechnology">
        <span class="branch-arrow"></span>Bio Technology
         </li>

 


<li class="branch-item" onclick="toggleYears('mtech', 'CSE')" id="CSE">
    <span class="branch-arrow-mtech"></span>Computer Science and Engineering
</li>

<li class="branch-item" onclick="toggleYears('mtech', 'Data Science and Engineering')" id="Data Science and Engineering">
    <span class="branch-arrow-mtech"></span>Data Science and Engineering
</li>
<li class="branch-item" onclick="toggleYears('mtech', 'Electronics and Communication Engineering')" id="Electronics and Communication Engineering">
    <span class="branch-arrow-mtech"></span>Electronics and Communication Engineering
</li>




<li class="branch-item" onclick="toggleYears('mtech', 'VLSI Design')" id="VLSI Design">
    <span class="branch-arrow-mtech"></span>VLSI Design
</li>
<li class="branch-item" onclick="toggleYears('mtech', 'Thermal Engineering')" id="Thermal Engineering">
    <span class="branch-arrow-mtech"></span>Thermal Engineering
</li>
<li class="branch-item" onclick="toggleYears('mtech', 'Textile Engineering and Management')" id="Textile Engineering and Management">
    <span class="branch-arrow-mtech"></span>Textile Engineering and Management
</li>
<li class="branch-item" onclick="toggleYears('mtech', 'Structural and Construction Engineering')" id="Structural and Construction Engineering">
    <span class="branch-arrow-mtech"></span>Structural and Construction Engineering
</li>
<li class="branch-item" onclick="toggleYears('mtech', 'Geotechnical & Geo-environmental Engineering')" id="Geotechnical & Geo-environmental Engineering">
    <span class="branch-arrow-mtech"></span>Geotechnical and Geo-environmental Engineering
</li>
<li class="branch-item" onclick="toggleYears('mtech', 'Control and Instrumentation Engineering')" id="Control and Instrumentation Engineering">
    <span class="branch-arrow-mtech"></span>Control and Instrumentation Engineering
</li>
<li class="branch-item" onclick="toggleYears('mtech', 'Design Engineering')" id="Design Engineering">
    <span class="branch-arrow-mtech"></span>Design Engineering
</li>
<li class="branch-item" onclick="toggleYears('mtech', 'Computer Science & Engineering (Information Security)')" id="Computer Science & Engineering (Information Security)">
    <span class="branch-arrow-mtech"></span>Computer Science and Engineering (Information Security)
</li>
<li class="branch-item" onclick="toggleYears('mtech', 'Renewable Energy')" id="Renewable Energy">
    <span class="branch-arrow-mtech"></span>Renewable Energy  
</li>
<li class="branch-item" onclick="toggleYears('mtech', 'Signal Processing and Machine Learning')" id="Signal Processing and Machine Learning">
    <span class="branch-arrow-mtech"></span>Signal Processing And Machine Learning
</li>
<li class="branch-item" onclick="toggleYears('mtech', 'Data Analytics')" id="Data Analytics">
    <span class="branch-arrow-mtech"></span>Data Analytics
</li>
<li class="branch-item" onclick="toggleYears('mtech', 'Me')" id="Me">
    <span class="branch-arrow"></span>Me
</li>

                <!-- Add other MTech branches similarly -->

            </ul>
            <div id="mtech-years" class="years-list">
                <h2 class="heading">Years</h2>
                <ul>
                    <li onclick="handleYears('Master of Technology (M.Tech)', '2022')">2022</li>
                    <li onclick="handleYears('Master 
                    of Technology (M.Tech)', '2023')">2023</li>
                    <li onclick="handleYears('Master of Technology (M.Tech)', '2024')">2024</li>
                    <li onclick="handleYears('Master of Technology (M.Tech)', '2025')">2025</li>
                    <li onclick="handleYears('Master of Technology (M.Tech)', '2026')">2026</li>
                    <!-- Add other years similarly -->
                </ul>
            </div>
        </div>
        </div>



    <!-- MBA Section -->
     <div class="program-item">
        <button class="program-btn transition delay-100 duration-300 hover:cursor-pointer hover:shadow-xl hover:bg-sky-400 hover:shadow-sky-500 hover:scale-110 w-full px-3 py-5 bg-white shadow shadow-gray-400 rounded-xl" onclick="toggleBranches('mba')">MBA</button>
        <div id="mba-branches" class="branches-list">
            <h2 class="heading">MBA Branches</h2>
            <ul>
                <!-- MBA branches if any -->
               
                <li class="branch-item" onclick="toggleYears('mba','Humanities and Management')" id="Humanities and Management">
                    <span class="branch-arrow"></span>Humanities and Management
                </li>
                <!-- Add other MBA branches similarly -->
            </ul>

            <div id="mba-years" class="years-list">
                <h2 class="heading">Years</h2>
               <ul>
                           <li onclick="handleYears('Master of Business Administration (MBA)','2022')">2022</li>
                            <li onclick="handleYears('Master of Business Administration (MBA)','2023')">2023</li>
                            <li onclick="handleYears('Master of Business Administration (MBA)','2024')">2024</li>
                            <li onclick="handleYears('Master of Business Administration (MBA)','2025')">2025</li>
                            <li onclick="handleYears('Master of Business Administration (MBA)','2026')">2025</li>
                        </ul>
            </div>
        </div>
     </div>
 </div>

   
    </div>
 </div>
















  <div id="course-table" class="table-container"></div>
  <script>
    
  async function fetchCourseData(degree, branch, year) {

   
    const studentTableContainer = document.getElementById("student-table");
    studentTableContainer.innerHTML = "";
    try {
        const response = await fetch('{{URL}}/Placement_Insights/');
        const data = await response.json();

        const filteredData = data.filter(item =>
            item.course === degree &&
            (degree === 'MBA' || item.department === branch) &&
            item.year === Number(year)
        );

         console.log(data);
        const aggregatedData = filteredData.reduce((acc, item) => {
            if (!acc[item.company]) {
                acc[item.company] = {
                    company: item.company,
                    package: parseFloat(item.package),
                    count: 1
                };
            } else {
                acc[item.company].package = Math.max(acc[item.company].package, parseFloat(item.package));
                acc[item.company].count += 1;
            }
            return acc;
        }, {});

        const tableData = Object.values(aggregatedData).map(item => [
            item.company,
           `${item.package}`!="NaN"?`${item.package} LPA`:"Not available",
            item.count,
            'View'
        ]);

        // Hide all branch lists and year lists
        document.querySelectorAll('.branches-list').forEach(list => list.style.display = 'none');
        document.querySelectorAll('.years-list').forEach(list => list.style.display = 'none');
        
        createTable(tableData, filteredData);
    } catch (error) {
        console.error('Error fetching data:', error);
    }
}



// Complete script file

// Complete script file

function createTable(data, originalData) {
    const tableContainer = document.getElementById("course-table");
    tableContainer.innerHTML = "";

    if (!data || data.length === 0) {
        tableContainer.innerHTML = "<p>No data available</p>";
        return;
    }

    const table = document.createElement("table");
    table.className = "min-w-full bg-white border border-gray-300";

    const thead = document.createElement("thead");
    const headerRow = document.createElement("tr");
    const headers = ["Company Name", "CTC", "Number of Students Placed", "View Details"];
    headers.forEach(headerText => {
        const th = document.createElement("th");
        th.className = "px-4 py-2 border-b font-semibold text-left";
        th.appendChild(document.createTextNode(headerText));
        headerRow.appendChild(th);
    });
    thead.appendChild(headerRow);
    table.appendChild(thead);

    const tbody = document.createElement("tbody");

    data.forEach(rowData => {
        const row = document.createElement("tr");

        rowData.forEach((cellData, index) => {
            const cell = document.createElement("td");
            cell.className = "px-4 py-2 border-b";
            if (index === 3) {
                const viewButton = document.createElement("button");
               viewButton.innerHTML="<i class='fa-solid fa-eye'></i>";
                viewButton.className = "view-button text-blue font-bold py-2 px-4 rounded";
                viewButton.onclick = function () {
                    alert("Please scroll for details");
                  

                    handleViewButtonClick(rowData[0], originalData);
                    const div2 = document.getElementById("student-table");
                    const offset = -110; 
                    const div2Position = div2.getBoundingClientRect().top + window.scrollY + offset;
                    window.scrollTo({top: div2Position,behavior: "smooth"});
                };
                cell.appendChild(viewButton);
            } else {
                cell.appendChild(document.createTextNode(cellData));
            }
            row.appendChild(cell);
        });

        tbody.appendChild(row);
    });

    table.appendChild(tbody);
    tableContainer.appendChild(table);
}


function handleViewButtonClick(company, data) {
    // Determine if the viewport width is less than 622px
    if (window.innerWidth < 622) {
        createStudentTable(company, data);
    } else {
      createStudentTable_BigegrWindow(company, data);
        console.log("View button clicked. Handle this for larger screens as needed.");
    }
}


function createStudentTable(company, data) {
    const studentTableContainer = document.getElementById("student-table");
    studentTableContainer.innerHTML = "";

    const companyData = data.filter(item => item.company === company).sort((a, b) => b.package - a.package);

    if (companyData.length === 0) {
        studentTableContainer.innerHTML = "<p>No student data available</p>";
        return;
    }

    const container = document.createElement("div");
    container.className = "student-table-container";

    const table = document.createElement("table");
    table.className = "min-w-full bg-white border border-gray-300 mt-4";

    const thead = document.createElement("thead");
    const headerRow = document.createElement("tr");
    const headers = ["Student Name", "Photo"];
    headers.forEach(headerText => {
        const th = document.createElement("th");
        th.className = "px-4 py-2 border-b font-semibold text-left";
        th.appendChild(document.createTextNode(headerText));
        headerRow.appendChild(th);
    });
    thead.appendChild(headerRow);
    table.appendChild(thead);

    const tbody = document.createElement("tbody");

    companyData.forEach(student => {
        const row = document.createElement("tr");

        const cellName = document.createElement("td");
        cellName.className = "px-4 py-2 border-b";
        cellName.appendChild(document.createTextNode(student.name));
        row.appendChild(cellName);

        const cellPhoto = document.createElement("td");
        cellPhoto.className = "px-4 py-2 border-b";
        const photo = document.createElement("img");
        photo.src = student.image; // Assuming student.image contains the image URL
        photo.className = "student-photo";
        photo.onclick = function () {
            showImagePopup(student);
        };
        cellPhoto.appendChild(photo);
        row.appendChild(cellPhoto);

        tbody.appendChild(row);
    });

    table.appendChild(tbody);
    container.appendChild(table);
    studentTableContainer.appendChild(container);
}



function showImagePopup(student) {
    const popup = document.createElement("div");
    popup.className = "popup-overlay";
    
    const popupContent = document.createElement("div");
    popupContent.className = "popup-content";
    
    const img = document.createElement("img");
    img.src = student.image;
    img.className = "popup-image";
    
    const info = document.createElement("div");
    info.className = "popup-info";
    
    const name = document.createElement("p");
    name.textContent = `Name: ${student.name}`;
    
    const company = document.createElement("p");
    company.textContent = `Company: ${student.company}`;
    
    const ctc = document.createElement("p");
    ctc.textContent =`${student.stipend}`!="undefined"? `LPA: ${student.stipend} LPA`:"LPA: Not availbale";
    
    info.appendChild(name);
    info.appendChild(company);
    info.appendChild(ctc);
    
    const closeButton = document.createElement("button");
    closeButton.textContent = "Close";
    closeButton.className = "popup-close";
    closeButton.onclick = () => document.body.removeChild(popup);
    
    popupContent.appendChild(img);
    popupContent.appendChild(info);
    popupContent.appendChild(closeButton);
    popup.appendChild(popupContent);
    
    document.body.appendChild(popup);
}


// Adding styles for responsiveness and popups
const styles = `
.table-container {
    overflow-x: auto;
    margin: 1rem 0;
}

table {
    width: 100%;
    border-collapse: collapse;
}

thead {
    background-color: #f5f5f5;
}

th, td {
    padding: 0.5rem;
    text-align: left;
    border: 1px solid #ddd;
}

th {
    background-color: #f0f0f0;
}

.student-table-container {
    position: relative;
}

.student-photo {
    width: 60px;
    height: 60px;
    object-fit: cover;
    cursor: pointer;
    border: 2px solid #ddd;
    border-radius: 8px;
    transition: transform 0.2s, box-shadow 0.2s;
}

.student-photo:hover {
    transform: scale(1.05);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

/* Media query for screens smaller than 622px */
@media (max-width: 621px) {
    .student-photo {
        width: 80px;
        height: 80px;
    }
}

.popup-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
}

.popup-content {
    background: white;
    padding: 1em;
    border-radius: 8px;
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.popup-image {
    max-width: 100%;
    max-height: 40vh;
    margin-bottom: 1em;
}

.popup-info {
    margin-bottom: 1em;
}

.popup-close {
    background: #ff0000;
    color: white;
    border: none;
    padding: 0.5em;
    border-radius: 4px;
    cursor: pointer;
}
`;

const styleSheet = document.createElement("style");
styleSheet.type = "text/css";
styleSheet.innerText = styles;
document.head.appendChild(styleSheet);


document.addEventListener('DOMContentLoaded', () => {
    document.addEventListener('click', (event) => {
        const programItems = document.querySelectorAll('.program-item');
        programItems.forEach(item => {
            const branchList = item.querySelector('.branches-list');
            const yearList = item.querySelector('.years-list');

            // Check if the click was outside of the program item, branch list, and year list
            if (!item.contains(event.target) && !branchList.contains(event.target) && !yearList.contains(event.target)) {
                // Hide all branch lists
                branchList.style.display = 'none';
                // Hide all year lists
                yearList.style.display = 'none';
            }
        });
    });
});

{{!-- 
function toggleBranches(program) {
    // Get the branches container for the selected program
    const branches = document.getElementById(`${program}-branches`);
    if (branches.style.display === 'none' || branches.style.display === '') {
        branches.style.display = 'block';
    } else {
        branches.style.display = 'none';
    }
} --}}


let currentOpenBranch = null;

{{!-- function toggleYears(program, branch) {

  
    const yearsContainer = document.getElementById(`${program}-years`);

    console.log("Yaer container");
    console.log(yearsContainer);
    const branchItem = document.getElementById(branch);

    // Toggle visibility of the years list
    if (currentOpenBranch === branch) {
        // Close the currently open branch
        yearsContainer.style.display = 'none';
        branchItem.classList.remove('active');
        currentOpenBranch = null;
    } else {
        // Close previously open branch
        if (currentOpenBranch) {
            const previousBranchItem = document.getElementById(currentOpenBranch);
            const previousYearsContainer = document.getElementById(`${program}-years`);

            

            previousYearsContainer.style.display = 'none';
            previousBranchItem.classList.remove('active');
        }

        // Open the new branch
        yearsContainer.style.display = 'block';
        branchItem.classList.add('active');
        currentOpenBranch = branch;
    }

    console.log(currentOpenBranch);
} --}}



function toggleYears(program, branch) {

    const yearsContainer = document.getElementById(`${program}-years`);
    console.log(yearsContainer);
    const branchItem = document.getElementById(branch);

    // Toggle visibility of the years list
    if (currentOpenBranch === branch) {
        // Close the currently open branch
        yearsContainer.style.display = 'none';
        branchItem.classList.remove('active');
        currentOpenBranch = null;
    } else {
        // Close previously open branch
        if (currentOpenBranch) {
            const previousBranchItem = document.getElementById(currentOpenBranch);
            const previousYearsContainer = document.getElementById(`${program}-years`);

            

            previousYearsContainer.style.display = 'none';
            previousBranchItem.classList.remove('active');
        }

        // Open the new branch
        yearsContainer.style.display = 'block';
        branchItem.classList.add('active');
        currentOpenBranch = branch;
    }

    console.log(currentOpenBranch);
}

// Initialize visibility state
document.querySelectorAll('.branches-list').forEach(element => element.style.display = 'none');
document.querySelectorAll('.years-list').forEach(element => element.style.display = 'none');




function handleYears(degree, year) {
    fetchCourseData(degree,currentOpenBranch, year);
}



function showImagePopup_BiggerWindow(imageUrl) {
    const popup = document.createElement("div");
    popup.className = "popup-overlay";
    
    const popupContent = document.createElement("div");
    popupContent.className = "popup-content";
    
    const img = document.createElement("img");
    img.src = imageUrl;
    img.className = "popup-image";
    
    const closeButton = document.createElement("button");
    closeButton.textContent = "Close";
    closeButton.className = "popup-close";
    closeButton.onclick = () => document.body.removeChild(popup);
    
    popupContent.appendChild(img);
    popupContent.appendChild(closeButton);
    popup.appendChild(popupContent);
    
    document.body.appendChild(popup);
}



function createStudentTable_BigegrWindow(company, data) {
    const studentTableContainer = document.getElementById("student-table");
    studentTableContainer.innerHTML = "";

    const companyData = data.filter(item => item.company === company).sort((a, b) => b.package - a.package);

    if (companyData.length === 0) {
        studentTableContainer.innerHTML = "<p>No student data available</p>";
        return;
    }

    const table = document.createElement("table");
    table.className = "min-w-full bg-white border border-gray-300 mt-4";

    // Create table header
    const thead = document.createElement("thead");
    const headerRow = document.createElement("tr");
    const headers = ["Company", "Branch", "Student Name", "CTC", "Year", "Photo"];
    headers.forEach(headerText => {
        const th = document.createElement("th");
        th.className = "px-4 py-2 border-b font-semibold text-left bg-gray-200";
        th.appendChild(document.createTextNode(headerText));
        headerRow.appendChild(th);
    });
    thead.appendChild(headerRow);
    table.appendChild(thead);

    // Create table body
    const tbody = document.createElement("tbody");

    companyData.forEach(student => {
        const row = document.createElement("tr");

        const cellCompany = document.createElement("td");
        cellCompany.className = "px-4 py-2 border-b";
        cellCompany.appendChild(document.createTextNode(student.company));
        row.appendChild(cellCompany);

        const cellBranch = document.createElement("td");
        cellBranch.className = "px-4 py-2 border-b";
        cellBranch.appendChild(document.createTextNode(student.department));
        row.appendChild(cellBranch);

        const cellName = document.createElement("td");
        cellName.className = "px-4 py-2 border-b";
        cellName.appendChild(document.createTextNode(student.name));
        row.appendChild(cellName);

        const cellPackage = document.createElement("td");
        cellPackage.className = "px-4 py-2 border-b";

        const text=`${student.package}`!="undefined"? `${student.package} LPA`:"Not availbale";
        cellPackage.appendChild(document.createTextNode(text));
        row.appendChild(cellPackage);

        const cellYear = document.createElement("td");
        cellYear.className = "px-4 py-2 border-b";
        cellYear.appendChild(document.createTextNode(student.year));
        row.appendChild(cellYear);

        const cellView = document.createElement("td");
        cellView.className = "px-4 py-2 border-b";
        const viewButton = document.createElement("button");
        viewButton.innerHTML="<i class='fa-solid fa-eye'></i>";
                viewButton.className = "view-button text-blue font-bold py-2 px-4 rounded";
        viewButton.onclick = function () {
            showImagePopup_BiggerWindow(student.image); // Assuming student.image contains the image URL
        };
        cellView.appendChild(viewButton);
        row.appendChild(cellView);

        tbody.appendChild(row);
    });

    table.appendChild(tbody);
    studentTableContainer.appendChild(table);
}


</script>
<div id="course-table"></div>
<div id="student-table"></div>

<div>
    {{>footer}}
  </div>
<script>
  function toggleBranches(program) {
    const branches = document.getElementById(`${program}-branches`);
    
    // Toggle the display of the branches list
    if (branches.style.display === "none" || !branches.style.display) {
        branches.style.display = "block";
    } else {
        branches.style.display = "none";
    }

    // If it's BTech, add the red background
    if (program === 'btech') {
        branches.classList.toggle('red-background');
    }
}
</script>
</body>

</html>